\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{k+kn}{from} \PYG{n+nn}{abc} \PYG{k+kn}{import} \PYG{n}{ABC}\PYG{p}{,} \PYG{n}{abstractmethod}
\PYG{k+kn}{import} \PYG{n+nn}{numpy} \PYG{k}{as} \PYG{n+nn}{np}
\PYG{k+kn}{import} \PYG{n+nn}{numpy}\PYG{n+nn}{.}\PYG{n+nn}{typing} \PYG{k}{as} \PYG{n+nn}{npt}
\PYG{k+kn}{import} \PYG{n+nn}{gymnasium} \PYG{k}{as} \PYG{n+nn}{gym}

\PYG{k}{class} \PYG{n+nc}{AbstractDataManager}\PYG{p}{(}\PYG{n}{ABC}\PYG{p}{)}\PYG{p}{:}
  \PYG{n+nd}{@abstractmethod}
  \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}obs\PYGZus{}space}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{)} \PYG{o}{\PYGZhy{}}\PYG{o}{\PYGZgt{}} \PYG{n}{gym}\PYG{o}{.}\PYG{n}{spaces}\PYG{o}{.}\PYG{n}{Box}\PYG{p}{:}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Result is assigned to the environment\PYGZsq{}s observation space\PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{k}{pass}

  \PYG{n+nd}{@abstractmethod}
  \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}data}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{)} \PYG{o}{\PYGZhy{}}\PYG{o}{\PYGZgt{}} \PYG{n+nb}{tuple}\PYG{p}{[}\PYG{n+nb}{int}\PYG{p}{,} \PYG{n+nb}{int}\PYG{p}{]}\PYG{p}{:}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    This function loads/fetches state data from files and stores it.}
\PYG{l+s+sd}{    Should be called in the environment\PYGZsq{}s reset() method.}
\PYG{l+s+sd}{    The properties assigned here should be accessed in get\PYGZus{}state().}
\PYG{l+s+sd}{    Note that the data should provide for one more than the number}
\PYG{l+s+sd}{      of time periods desired (for the initial state).}
\PYG{l+s+sd}{    Returns: (number of time periods, number of stock tickers)}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{k}{pass}

  \PYG{n+nd}{@abstractmethod}
  \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}state}\PYG{p}{(}
    \PYG{n+nb+bp}{self}\PYG{p}{,}
    \PYG{n}{t}\PYG{p}{:} \PYG{n+nb}{int}\PYG{p}{,}
    \PYG{n}{w}\PYG{p}{:} \PYG{n}{npt}\PYG{o}{.}\PYG{n}{NDArray}\PYG{p}{[}\PYG{n}{np}\PYG{o}{.}\PYG{n}{float64}\PYG{p}{]}\PYG{p}{,}
    \PYG{n}{port\PYGZus{}val}\PYG{p}{:} \PYG{n}{np}\PYG{o}{.}\PYG{n}{float64}
  \PYG{p}{)} \PYG{o}{\PYGZhy{}}\PYG{o}{\PYGZgt{}} \PYG{n}{npt}\PYG{o}{.}\PYG{n}{NDArray}\PYG{p}{[}\PYG{n}{np}\PYG{o}{.}\PYG{n}{float64}\PYG{p}{]}\PYG{p}{:}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Computes and returns the new state at time t.}
\PYG{l+s+sd}{    State can include the current portfolio weight and value,}
\PYG{l+s+sd}{      provided as additional parameters.}
\PYG{l+s+sd}{    This state will be used by the agent for calculating weights}
\PYG{l+s+sd}{      at the start time time period t+1.}
\PYG{l+s+sd}{    When t=0, it should output the initial state.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{k}{pass}

  \PYG{n+nd}{@abstractmethod}
  \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}prices}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{t}\PYG{p}{:} \PYG{n+nb}{int}\PYG{p}{)} \PYG{o}{\PYGZhy{}}\PYG{o}{\PYGZgt{}} \PYG{n}{npt}\PYG{o}{.}\PYG{n}{NDArray}\PYG{p}{[}\PYG{n}{np}\PYG{o}{.}\PYG{n}{float64}\PYG{p}{]}\PYG{p}{:}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Returns the security prices at time t (at the beginning}
\PYG{l+s+sd}{      of time period t+1).}
\PYG{l+s+sd}{    When t=0, it should output the initial prices.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{k}{pass}
\end{Verbatim}
